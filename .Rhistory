library(devtools)
install_github("tedhchen/multilayer.ergm", build_vignettes = TRUE)
library(multilayer.ergm)
help(chemg_data)
pol
network%v%'layer.mem' <- layer.ids
mnet <- to.multiplex(sci, infrep, output = "network")
mnet
knitr::opts_chunk$set(echo = TRUE)
mnet%v%'layer.mem'
check.multilayer(mnet)
mod.monoplex <- ergm(scinet ~ edges + edgecov(prefsim) + mutual,
control = control.ergm(seed = 206424))
scinet <- network(sci)
scinet
mod.monoplex <- ergm(scinet ~ edges + edgecov(prefsim) + mutual,
control = control.ergm(seed = 206424))
summary(mod.monoplex)
free <- to.multiplex(matrix(1, ncol = 30, nrow = 30), matrix(1, ncol = 30, nrow = 30), output = "network", offzeros = TRUE)
mod.within <- ergm(mnet
~ edgecov_layer("edges", layer = 1) + edgecov_layer("edges", layer = 2)
+ edgecov_layer(prefsim, layer = 1) + edgecov_layer(prefsim, layer = 2)
+ mutual("layer.mem", diff = T),
control = control.ergm(seed = 206424),
constraints = ~fixallbut(free))
free <- to.multiplex(matrix(1, ncol = 30, nrow = 30), matrix(1, ncol = 30, nrow = 30), output = "network", offzeros = TRUE)
mod.within <- ergm(mnet
~ edgecov_layer("edges", layer = 1) + edgecov_layer("edges", layer = 2)
+ edgecov_layer(prefsim, layer = 1) + edgecov_layer(prefsim, layer = 2)
+ mutual("layer.mem", diff = T),
control = control.ergm(seed = 206424),
constraints = ~fixallbut(free))
summary(mod.within)
mod.cross <- ergm(mnet
~ edgecov_layer("edges", layer = 1) + edgecov_layer("edges", layer = 2)
+ edgecov_layer(prefsim, layer = 1) + edgecov_layer(prefsim, layer = 2)
+ mutual("layer.mem", diff = T)
+ duplexdyad(c("e","f"), layers = c(1,2)),
control = control.ergm(seed = 206424),
constraints = ~fixallbut(free))
summary(mod.cross)
install.packages(c("mlergm", "ergm", "ergm.ego"))
install.packages(c("mlergm", "ergm.ego"))
library(mlergm)
?mlergm
data(classes)
view(classes)
title[["mel"]][[10]]
classes
